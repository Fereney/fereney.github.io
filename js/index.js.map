{
  "version": 3,
  "sources": ["../../src/js/lib/map/_grid.js", "../../src/js/lib/map/_getMapCoordinates.js", "../../src/js/lib/map/_updateMapPosition.js", "../../src/js/lib/map/_getIconSvg.js", "../../src/js/lib/map/map.js", "../../src/js/index.js"],
  "sourcesContent": ["const gridLabel = {\n  position: {\n    bottom: 20,\n    left: 4,\n  },\n  fontSize: 14,\n  color: '#2a1f29',\n}\nconst gridLine = {\n  color: '#2a1f29',\n}\n\n// Create grid\nconst createGrid = (map, mapSize, squareSize) => {\n  // Create horizontal lines\n  for (let i = 0; i <= mapSize; i++) {\n    const line = document.createElement('div');\n    line.className = 'map__gridLine';\n    line.style.left = '0';\n    line.style.top = `${i * squareSize}px`;\n    line.style.width = `${mapSize * squareSize}px`;\n    line.style.height = '1px';\n    line.style.backgroundColor = gridLine.color;\n    map.appendChild(line);\n  }\n  \n  // Create vertical lines\n  for (let i = 0; i <= mapSize; i++) {\n    const line = document.createElement('div');\n    line.className = 'map__gridLine';\n    line.style.left = `${i * squareSize}px`;\n    line.style.top = '0';\n    line.style.width = '1px';\n    line.style.height = `${mapSize * squareSize}px`;\n    line.style.backgroundColor = gridLine.color;\n    map.appendChild(line);\n  }\n\n  // Add labels\n  for (let y = 0; y < mapSize; y++) {\n    for (let x = 0; x < mapSize; x++) {\n    const label = document.createElement('div');\n    label.className = 'map__gridLabel';\n    const letter = String.fromCharCode(65 + (mapSize - 1 - y)); // 65 = 'A'\n    const number = (x + 1).toString();\n    label.textContent = `${letter}${number}`;\n    label.style.position = 'absolute';\n    label.style.left = `${x * squareSize + gridLabel.position.left}px`;\n    label.style.top = `${(y + 1) * squareSize - gridLabel.position.bottom}px`;\n    label.style.fontSize = `${gridLabel.fontSize}`;\n    label.style.color = `${gridLabel.color}`;\n    label.style.pointerEvents = 'none';\n    map.appendChild(label);\n    }\n  }\n}\n\nexport default createGrid;", "// Converts click coordinates to map coordinates\nconst getMapCoordinates = (mapContainer, clientX, clientY, offsetX, offsetY, scale) => {\n  const rect = mapContainer.getBoundingClientRect();\n  const containerX = clientX - rect.left;\n  const containerY = clientY - rect.top;\n  \n  // Taking into account scale and offset\n  const mapX = (containerX - offsetX) / scale;\n  const mapY = (containerY - offsetY) / scale;\n  \n  return { x: mapX, y: mapY };\n}\n\nexport default getMapCoordinates;", "// Update map position and scale\nconst updateMapPosition = (map, offsetX, offsetY, scale) => {\n  map.style.transform = `translate(${offsetX}px, ${offsetY}px) scale(${scale})`;\n}\n\nexport default updateMapPosition;", "const getIconSvg = (icon) => {\n  switch (icon) {\n    case 'Cave':\n      return '<img src=\"./images/icons/common/Cave.svg\" alt=\"Cave\" width=\"40\" height=\"40\"/>';\n    case 'HomeBase':\n      return '<img src=\"./images/icons/common/HomeBase.svg\" alt=\"HomeBase\" width=\"40\" height=\"40\"/>';\n    case 'Proxy':\n      return '<img src=\"./images/icons/common/Proxy.svg\" alt=\"Proxy\" width=\"40\" height=\"40\"/>';\n    case 'Shipwreck':\n      return '<img src=\"./images/icons/common/Shipwreck.svg\" alt=\"Shipwreck\" width=\"40\" height=\"40\"/>';\n    case 'ShipwreckX2':\n      return '<img src=\"./images/icons/common/ShipwreckX2.svg\" alt=\"ShipwreckX2\" width=\"40\" height=\"40\"/>';\n    case 'Spice1':\n      return '<img src=\"./images/icons/common/Spice1.svg\" alt=\"Spice1\" width=\"40\" height=\"40\"/>';\n    case 'Spice2':\n      return '<img src=\"./images/icons/common/Spice2.svg\" alt=\"Spice2\" width=\"40\" height=\"40\"/>';\n    case 'Spice3':\n      return '<img src=\"./images/icons/common/Spice3.svg\" alt=\"Spice3\" width=\"40\" height=\"40\"/>';\n    case 'Stravidium':\n      return '<img src=\"./images/icons/common/Stravidium.svg\" alt=\"Stravidium\" width=\"40\" height=\"40\"/>';\n    case 'TestingStation':\n      return '<img src=\"./images/icons/common/TestingStation.svg\" alt=\"TestingStation\" width=\"40\" height=\"40\"/>';\n    case 'Titanium':\n      return '<img src=\"./images/icons/common/Titanium.svg\" alt=\"Titanium\" width=\"40\" height=\"40\"/>';\n    case 'House_Alexin':\n      return '<img src=\"./images/icons/houses/House_Alexin.svg\" alt=\"House_Alexin\" width=\"40\" height=\"40\"/>';\n    case 'House_Argpsaz':\n      return '<img src=\"./images/icons/houses/House_Argpsaz.svg\" alt=\"House_Argpsaz\" width=\"40\" height=\"40\"/>';\n    case 'House_Dyvetz':\n      return '<img src=\"./images/icons/houses/House_Dyvetz.svg\" alt=\"House_Dyvetz\" width=\"40\" height=\"40\"/>';\n    case 'House_Ecaz':\n      return '<img src=\"./images/icons/houses/House_Ecaz.svg\" alt=\"House_Ecaz\" width=\"40\" height=\"40\"/>';\n    case 'House_Hagal':\n      return '<img src=\"./images/icons/houses/House_Hagal.svg\" alt=\"House_Hagal\" width=\"40\" height=\"40\"/>';\n    case 'House_Hurata':\n      return '<img src=\"./images/icons/houses/House_Hurata.svg\" alt=\"House_Hurata\" width=\"40\" height=\"40\"/>';\n    case 'House_Imota':\n      return '<img src=\"./images/icons/houses/House_Imota.svg\" alt=\"House_Imota\" width=\"40\" height=\"40\"/>';\n    case 'House_Kenola':\n      return '<img src=\"./images/icons/houses/House_Kenola.svg\" alt=\"House_Kenola\" width=\"40\" height=\"40\"/>';\n    case 'House_Lindaren':\n      return '<img src=\"./images/icons/houses/House_Lindaren.svg\" alt=\"House_Lindaren\" width=\"40\" height=\"40\"/>';\n    case 'House_Maros':\n      return '<img src=\"./images/icons/houses/House_Maros.svg\" alt=\"House_Maros\" width=\"40\" height=\"40\"/>';\n    case 'House_Mikarrol':\n      return '<img src=\"./images/icons/houses/House_Mikarrol.svg\" alt=\"House_Mikarrol\" width=\"40\" height=\"40\"/>';\n    case 'House_Moritani':\n      return '<img src=\"./images/icons/houses/House_Moritani.svg\" alt=\"House_Moritani\" width=\"40\" height=\"40\"/>';\n    case 'House_Mutelli':\n      return '<img src=\"./images/icons/houses/House_Mutelli.svg\" alt=\"House_Mutelli\" width=\"40\" height=\"40\"/>';\n    case 'House_Novebruns':\n      return '<img src=\"./images/icons/houses/House_Novebruns.svg\" alt=\"House_Novebruns\" width=\"40\" height=\"40\"/>';\n    case 'House_Richese':\n      return '<img src=\"./images/icons/houses/House_Richese.svg\" alt=\"House_Richese\" width=\"40\" height=\"40\"/>';\n    case 'House_Sor':\n      return '<img src=\"./images/icons/houses/House_Sor.svg\" alt=\"House_Sor\" width=\"40\" height=\"40\"/>';\n    case 'House_Spinnette':\n      return '<img src=\"./images/icons/houses/House_Spinnette.svg\" alt=\"House_Spinnette\" width=\"40\" height=\"40\"/>';\n    case 'House_Taligari':\n      return '<img src=\"./images/icons/houses/House_Taligari.svg\" alt=\"House_Taligari\" width=\"40\" height=\"40\"/>';\n    case 'House_Thorvald':\n      return '<img src=\"./images/icons/houses/House_Thorvald.svg\" alt=\"House_Thorvald\" width=\"40\" height=\"40\"/>';\n    case 'House_Tseida':\n      return '<img src=\"./images/icons/houses/House_Tseida.svg\" alt=\"House_Tseida\" width=\"40\" height=\"40\"/>';\n    case 'House_Varota':\n      return '<img src=\"./images/icons/houses/House_Varota.svg\" alt=\"House_Varota\" width=\"40\" height=\"40\"/>';\n    case 'House_Vernius':\n      return '<img src=\"./images/icons/houses/House_Vernius.svg\" alt=\"House_Vernius\" width=\"40\" height=\"40\"/>';\n    case 'House_Wallach':\n      return '<img src=\"./images/icons/houses/House_Wallach.svg\" alt=\"House_Wallach\" width=\"40\" height=\"40\"/>';\n    case 'House_Wayku':\n      return '<img src=\"./images/icons/houses/House_Wayku.svg\" alt=\"House_Wayku\" width=\"40\" height=\"40\"/>';\n    case 'House_Wydras':\n      return '<img src=\"./images/icons/houses/House_Wydras.svg\" alt=\"House_Wydras\" width=\"40\" height=\"40\"/>';\n    default:\n      return null;\n  }\n}\n\nexport default getIconSvg;", "import createGrid from './_grid.js';\nimport getMapCoordinates from './_getMapCoordinates.js';\nimport updateMapPosition from './_updateMapPosition.js';\nimport getIconSvg from './_getIconSvg.js';\n\nconst initMap = () => {\n  // Config\n  const mapSize = 9; // 9x9 sqrs\n  const squareSize = 120; // size in pixels\n\n  // Default state\n  let scale = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  let isDragging = false;\n  let lastX, lastY;\n  let markers = [];\n  let nextMarkerId = 1;\n\n  // Modes of operation\n  const MODES = {\n    MAP_MOVE: 'map_move',\n    MAP_EDIT: 'map_edit',\n    MAP_ICON: 'map_icon',\n    MAP_DELETE: 'map_delete',\n  };\n  let currentMode = MODES.MAP_MOVE;\n  let selectedIcon = 'pin'; // default icon\n\n  // Selectors\n  const mapContainer = document.querySelector('.map__container');\n  const map = document.querySelector('.map__canvas');\n  const moveModeBtn = document.querySelector('.map__mode_move');\n  const addMarkerModeBtn = document.querySelector('.map__mode_edit');\n  const deleteMarkerModeBtn = document.querySelector('.map__mode_delete');\n  const iconModeBtn = document.querySelector('.map__mode_icon');\n  const shareLinkBtn = document.querySelector('.map__shareLink');\n  const shareUrlInput = document.querySelector('.map__shareField');\n  const modeInfo = document.querySelector('.map__modeStatus');\n  const iconPickerPanel = document.querySelector('.map__controlsPart_icons');\n  const iconPickerBtns = document.querySelectorAll('.map__iconPicker');\n\n  // Set icon picker visibility\n  const setIconPickerVisibility = (show) => {\n    if (iconPickerPanel) {\n      iconPickerPanel.style.display = show ? 'flex' : 'none';\n    }\n  }\n\n  // Clear btn active states\n  const clearActiveStates = (arr) => {\n    arr.forEach(btn => {\n      btn.classList.remove('map__button_active');\n    });\n    setIconPickerVisibility(false);\n  }\n\n  // Set container state\n  const setContainerCursorState = (mod) => {\n    mapContainer.classList.remove('map__container_grab');\n    mapContainer.classList.remove('map__container_crosshair');\n    mapContainer.classList.remove('map__container_pointer');\n    mapContainer.classList.add(`map__container_${mod}`);\n  }\n\n  // Set up event listeners\n  const setMode = (mode) => {\n    currentMode = mode;\n    clearActiveStates([moveModeBtn, addMarkerModeBtn, deleteMarkerModeBtn, iconModeBtn]);\n    setIconPickerVisibility(false);\n    switch (mode) {\n      case MODES.MAP_MOVE:\n        moveModeBtn.classList.add('map__button_active');\n        modeInfo.textContent = '\u041F\u0435\u0440\u0435\u043C\u0435\u0449\u0430\u0439\u0442\u0435 \u043A\u0430\u0440\u0442\u0443';\n        setContainerCursorState('grab');\n        break;\n      case MODES.MAP_EDIT:\n        addMarkerModeBtn.classList.add('map__button_active');\n        modeInfo.textContent = '\u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0439\u0442\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u044B';\n        setContainerCursorState('crosshair');\n        break;\n      case MODES.MAP_DELETE:\n        deleteMarkerModeBtn.classList.add('map__button_active');\n        modeInfo.textContent = '\u0423\u0434\u0430\u043B\u044F\u0439\u0442\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u044B';\n        setContainerCursorState('pointer');\n        break;\n      case MODES.MAP_ICON:\n        iconModeBtn.classList.add('map__button_active');\n        modeInfo.textContent = '\u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0439\u0442\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u044B-\u0438\u043A\u043E\u043D\u043A\u0438';\n        setContainerCursorState('crosshair');\n        setIconPickerVisibility(true);\n        break;\n    }\n  }\n\n  // Add event listeners\n  const setupEventListeners = () => {\n    // Mouse down to start dragging\n    mapContainer.addEventListener('mousedown', (e) => {\n      if (currentMode === MODES.MAP_MOVE && (e.target === mapContainer || e.target === map)) {\n        isDragging = true;\n        lastX = e.clientX;\n        lastY = e.clientY;\n        mapContainer.style.cursor = 'grabbing';\n      }\n    });\n    \n    // Touch start to start dragging (mobile)\n    mapContainer.addEventListener('touchstart', (e) => {\n      if (currentMode === MODES.MAP_MOVE && (e.target === mapContainer || e.target === map)) {\n        if (e.touches.length === 1) {\n          isDragging = true;\n          lastX = e.touches[0].clientX;\n          lastY = e.touches[0].clientY;\n          mapContainer.style.cursor = 'grabbing';\n        }\n      }\n    });\n\n    // Mouse move\n    document.addEventListener('mousemove', (e) => {\n      if (isDragging && currentMode === MODES.MAP_MOVE) {\n        const dx = e.clientX - lastX;\n        const dy = e.clientY - lastY;\n        offsetX += dx;\n        offsetY += dy;\n        lastX = e.clientX;\n        lastY = e.clientY;\n        updateMapPosition(map, offsetX, offsetY, scale);\n        updateUrl();\n      }\n    });\n\n    // Touch move (mobile)\n    document.addEventListener('touchmove', (e) => {\n      if (isDragging && currentMode === MODES.MAP_MOVE && e.touches.length === 1) {\n        const dx = e.touches[0].clientX - lastX;\n        const dy = e.touches[0].clientY - lastY;\n        offsetX += dx;\n        offsetY += dy;\n        lastX = e.touches[0].clientX;\n        lastY = e.touches[0].clientY;\n        updateMapPosition(map, offsetX, offsetY, scale);\n        updateUrl();\n        e.preventDefault(); // \u043F\u0440\u0435\u0434\u043E\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u043C \u0441\u043A\u0440\u043E\u043B\u043B \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B\n      }\n    }, { passive: false });\n\n    // Mouse up\n    document.addEventListener('mouseup', () => {\n      isDragging = false;\n      if (currentMode === MODES.MAP_MOVE) {\n        mapContainer.style.cursor = 'grab';\n      }\n    });\n\n    // Touch end (mobile)\n    document.addEventListener('touchend', () => {\n      isDragging = false;\n      if (currentMode === MODES.MAP_MOVE) {\n        mapContainer.style.cursor = 'grab';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    mapContainer.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      // Get mouse position relative to the map\n      const { x: mapX, y: mapY } = getMapCoordinates(mapContainer, e.clientX, e.clientY, offsetX, offsetY, scale);\n      \n      // Change scale\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      scale *= delta;\n      scale = Math.max(0.1, Math.min(scale, 5)); // \u041E\u0433\u0440\u0430\u043D\u0438\u0447\u0438\u0432\u0430\u0435\u043C \u043C\u0430\u0441\u0448\u0442\u0430\u0431\n      \n      // Correct offset so zoom happens relative to cursor\n      const rect = mapContainer.getBoundingClientRect();\n      const containerX = e.clientX - rect.left;\n      const containerY = e.clientY - rect.top;\n      \n      offsetX = containerX - mapX * scale;\n      offsetY = containerY - mapY * scale;\n      \n      updateMapPosition(map, offsetX, offsetY, scale);\n      updateUrl();\n    });\n    \n    // Add marker on click\n    mapContainer.addEventListener('click', (e) => {\n      if (currentMode === MODES.MAP_EDIT && e.target === map) {\n        // Get exact coordinates on the map\n        const { x, y } = getMapCoordinates(mapContainer, e.clientX, e.clientY, offsetX, offsetY, scale);\n        const text = prompt('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u0430:', '\u041D\u043E\u0432\u044B\u0439 \u043C\u0430\u0440\u043A\u0435\u0440');\n        // \u041D\u0435 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0442\u044C \u043C\u0430\u0440\u043A\u0435\u0440, \u0435\u0441\u043B\u0438 \u043E\u0442\u043C\u0435\u043D\u0430 \u0438\u043B\u0438 \u043F\u0443\u0441\u0442\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430\n        if (text && text.trim() !== '') {\n          addMarker(x, y, text);\n          updateUrl();\n        }\n      } else if (currentMode === MODES.MAP_ICON && e.target === map) {\n        // \u041D\u0435 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0442\u044C \u043C\u0430\u0440\u043A\u0435\u0440, \u0435\u0441\u043B\u0438 \u0438\u043A\u043E\u043D\u043A\u0430 \u043D\u0435 \u0432\u044B\u0431\u0440\u0430\u043D\u0430\n        if (!selectedIcon) return;\n        const { x, y } = getMapCoordinates(mapContainer, e.clientX, e.clientY, offsetX, offsetY, scale);\n        const text = prompt('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u0430:', '');\n        // \u041D\u0435 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0442\u044C \u043C\u0430\u0440\u043A\u0435\u0440, \u0435\u0441\u043B\u0438 \u043E\u0442\u043C\u0435\u043D\u0430 prompt\n        if (text !== null) {\n          addMarker(x, y, text, null, selectedIcon);\n          updateUrl();\n        }\n      }\n    });\n\n    // Edit/delete marker or icon on click\n    map.addEventListener('click', (e) => {\n      // Allow deleting both markers and icons (they both have class 'marker')\n      let marker = null;\n      if (e.target.classList.contains('map__marker')) {\n        marker = e.target;\n      } else if (e.target.closest && e.target.closest('.map__marker')) {\n        marker = e.target.closest('.map__marker');\n      }\n      if (marker) {\n        if (currentMode === MODES.MAP_DELETE) {\n          // Delete marker or icon\n          const id = parseInt(marker.dataset.id);\n          if (confirm('\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u044D\u0442\u043E\u0442 \u043C\u0430\u0440\u043A\u0435\u0440?')) {\n            marker.remove();\n            markers = markers.filter(m => m.id !== id);\n            updateUrl();\n          }\n        } else if (currentMode === MODES.MAP_MOVE) {\n          // Edit marker (in move mode)\n          const newText = prompt('\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435:', marker.dataset.text);\n          if (newText !== null) {\n            marker.dataset.text = newText;\n            // Update marker data\n            const id = parseInt(marker.dataset.id);\n            const markerData = markers.find(m => m.id === id);\n            if (markerData) {\n              markerData.text = newText;\n            }\n            // Update tooltip text if exists\n            const tooltip = marker.querySelector('.map__markerTooltip');\n            if (tooltip) {\n              tooltip.textContent = newText;\n              if (!newText) tooltip.style.display = 'none';\n              else tooltip.style.display = '';\n            }\n            updateUrl();\n          }\n        }\n      }\n    });\n    \n    // Mode buttons\n    moveModeBtn.addEventListener('click', () => setMode(MODES.MAP_MOVE));\n    addMarkerModeBtn.addEventListener('click', () => setMode(MODES.MAP_EDIT));\n    deleteMarkerModeBtn.addEventListener('click', () => setMode(MODES.MAP_DELETE));\n    iconModeBtn.addEventListener('click', () => setMode(MODES.MAP_ICON));\n    if (iconPickerBtns) {\n      iconPickerBtns.forEach(btn => {\n        btn.addEventListener('click', () => {\n          selectedIcon = btn.dataset.icon;\n          iconPickerBtns.forEach(b => {\n            console.log(b.classList);\n            b.classList.remove('map__iconPicker_active');\n          });\n          btn.classList.add('map__iconPicker_active');\n        });\n      });\n    }\n    \n    // Share link button\n    shareLinkBtn.addEventListener('click', () => {\n      updateUrl();\n      shareUrlInput.select();\n      document.execCommand('copy');\n      alert('\u0421\u0441\u044B\u043B\u043A\u0430 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0430 \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430');\n    });\n  }\n\n  // Add marker function\n  const addMarker = (x, y, text, id = null, icon = null) => {\n    if (id === null) {\n      id = nextMarkerId++;\n    }\n    const marker = document.createElement('div');\n    marker.className = 'map__marker';\n    marker.dataset.id = id;\n    marker.dataset.text = text;\n    if (icon) {\n      marker.className = 'map__marker map__marker_icon';\n      marker.dataset.icon = icon;\n      marker.innerHTML = getIconSvg(icon);\n    }\n    // Tooltip for description\n    if (text && text !== '') {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'map__markerTooltip';\n      tooltip.textContent = text;\n      marker.appendChild(tooltip);\n    }\n    // Position the marker\n    marker.style.left = `${x}px`;\n    marker.style.top = `${y}px`;\n    map.appendChild(marker);\n    // Save marker in array\n    // Always save icon (even if null) for correct serialization\n    markers.push({ id, x, y, text, icon: icon || null });\n    return marker;\n  }\n\n  // Update URL with current state\n  const updateUrl = () => {\n    // Serialize all marker fields, including icon\n    const state = {\n      scale,\n      offsetX,\n      offsetY,\n      markers: markers.map(m => ({\n        id: m.id,\n        x: m.x,\n        y: m.y,\n        text: m.text,\n        icon: m.icon || null\n      }))\n    };\n    \n    const stateStr = encodeURIComponent(JSON.stringify(state));\n    const url = `${window.location.origin}${window.location.pathname}?state=${stateStr}`;\n    shareUrlInput.value = url;\n    window.history.replaceState(null, null, url);\n  }\n\n  // Load state from URL\n  const loadStateFromUrl = () => {\n    const params = new URLSearchParams(window.location.search);\n    const stateStr = params.get('state');\n    \n    if (stateStr) {\n      try {\n        const state = JSON.parse(decodeURIComponent(stateStr));\n        \n        scale = state.scale || scale;\n        offsetX = state.offsetX || offsetX;\n        offsetY = state.offsetY || offsetY;\n        \n        // \u0412\u043E\u0441\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u043C\u0430\u0440\u043A\u0435\u0440\u044B \u0441 \u0438\u043A\u043E\u043D\u043A\u0430\u043C\u0438\n        if (state.markers && state.markers.length > 0) {\n          markers = [];\n          state.markers.forEach(marker => {\n            addMarker(marker.x, marker.y, marker.text, marker.id, marker.icon || null);\n            nextMarkerId = Math.max(nextMarkerId, marker.id + 1);\n          });\n        }\n      } catch (e) {\n        console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F:', e);\n      }\n    }\n  }\n\n  const installMapSize = () => {\n    // Set map size based on square size and map size\n    map.style.width = `${mapSize * squareSize}px`;\n    map.style.height = `${mapSize * squareSize}px`;\n  }\n\n  // init map\n  const startMap = () => {\n    // Install map size\n    installMapSize();\n    // Create grid\n    createGrid(map, mapSize, squareSize);\n    // Load state from URL if exists\n    loadStateFromUrl();\n    // Update map position\n    updateMapPosition(map, offsetX, offsetY, scale);\n    // Add event listeners\n    setupEventListeners();\n    // Activate move mode by default\n    setMode(MODES.MAP_MOVE);\n  }\n\n  startMap();\n}\n\nexport default initMap;\n", "import initMap from \"./lib/map/map\";\n\ninitMap();\n"],
  "mappings": "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",
  "names": ["gridLabel", "gridLine", "createGrid", "map", "mapSize", "squareSize", "line", "y", "x", "label", "letter", "number", "grid_default", "getMapCoordinates", "mapContainer", "clientX", "clientY", "offsetX", "offsetY", "scale", "rect", "containerX", "containerY", "mapX", "mapY", "getMapCoordinates_default", "updateMapPosition", "map", "offsetX", "offsetY", "scale", "updateMapPosition_default", "getIconSvg", "icon", "getIconSvg_default", "initMap", "scale", "offsetX", "offsetY", "isDragging", "lastX", "lastY", "markers", "nextMarkerId", "MODES", "currentMode", "selectedIcon", "mapContainer", "map", "moveModeBtn", "addMarkerModeBtn", "deleteMarkerModeBtn", "iconModeBtn", "shareLinkBtn", "shareUrlInput", "modeInfo", "iconPickerPanel", "iconPickerBtns", "setIconPickerVisibility", "show", "clearActiveStates", "arr", "btn", "setContainerCursorState", "mod", "setMode", "mode", "setupEventListeners", "dx", "dy", "updateMapPosition_default", "updateUrl", "mapX", "mapY", "getMapCoordinates_default", "delta", "rect", "containerX", "containerY", "x", "y", "text", "addMarker", "marker", "id", "m", "newText", "markerData", "tooltip", "b", "icon", "getIconSvg_default", "state", "stateStr", "url", "loadStateFromUrl", "e", "installMapSize", "grid_default", "map_default", "map_default"]
}
